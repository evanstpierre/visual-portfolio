services:
  next:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: next-dev
    ports:
      - "3000:3000"
    environment:
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
      HOSTNAME: "0.0.0.0"
      NODE_ENV: "development"
      # *service name*
      MONGO_URI: "mongodb://mongo:27017/appdb"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      mongo:
        condition: service_healthy
    restart: always
    networks: [app-net]
    command: ["npm", "run", "dev"]
  


  mongo:
      image: mongo:7
      container_name: mongo
      restart: always
      volumes:
        - mongo_data:/data/db
        - ./init-scripts:/docker-entrypoint-initdb.d:ro
      environment:
       # Root (admin) user that the image creates
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

      # The DB your init.js should seed
      MONGO_INITDB_DATABASE: ${MONGO_DB}

      # Pass app creds to your init.js (names are up to you)
      APP_DB_USER: ${MONGO_USER}
      APP_DB_PASS: ${MONGO_PASS}
      healthcheck:
        # quieter & reliable ping
        test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
        interval: 5s
        timeout: 3s
        retries: 20
      expose:
        - "27017"         
      networks: [app-net]

volumes:
  mongo_data:

networks:
  app-net:
    driver: bridge